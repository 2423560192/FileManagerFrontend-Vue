{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'FileList',\n  data() {\n    return {\n      loading: true,\n      files: [],\n      error: '',\n      userId: localStorage.getItem('userId'),\n      // 新文件表单\n      newFile: {\n        filename: '',\n        content: '',\n        permission: 'read'\n      },\n      creating: false,\n      createError: '',\n      createSuccess: '',\n      // 删除确认\n      showDeleteConfirm: false,\n      selectedFile: null,\n      deleting: false,\n      // 添加编辑相关的数据\n      showEditModal: false,\n      editingFile: null,\n      editError: '',\n      updating: false,\n      // 记录打开的文件ID列表\n      openFiles: new Set(JSON.parse(localStorage.getItem('openFiles') || '[]')),\n      opening: null,\n      closing: null,\n      openedFile: null // 当前打开的文件\n    };\n  },\n  created() {\n    this.fetchFiles();\n  },\n  methods: {\n    async fetchFiles() {\n      this.loading = true;\n      this.error = '';\n      try {\n        const userId = localStorage.getItem('userId');\n        const response = await this.$axios.get(`/file/list/${userId}`);\n        if (response.data.success) {\n          // 为每个文件添加打开状态\n          this.files = (response.data.files || []).map(file => ({\n            ...file,\n            isOpen: this.openFiles.has(file.id)\n          }));\n        } else {\n          this.error = '获取文件列表失败';\n        }\n      } catch (error) {\n        console.error('获取文件列表失败:', error);\n        if (error.response) {\n          console.error('错误响应:', error.response.data);\n          this.error = error.response.data.message || '获取文件列表失败，服务器错误';\n        } else if (error.request) {\n          this.error = '无法连接到服务器，请检查网络连接';\n        } else {\n          this.error = '获取文件列表失败，请稍后再试';\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async createFile() {\n      this.creating = true;\n      this.createError = '';\n      this.createSuccess = '';\n      try {\n        const userId = localStorage.getItem('userId');\n        await this.$axios.post('/file/create', {\n          userId: parseInt(userId),\n          filename: this.newFile.filename,\n          content: this.newFile.content || '',\n          permission: this.newFile.permission\n        });\n        this.createSuccess = '文件创建成功！';\n        // 重置表单\n        this.newFile = {\n          filename: '',\n          content: '',\n          permission: 'read'\n        };\n        // 刷新文件列表\n        await this.fetchFiles();\n      } catch (error) {\n        console.error('创建文件失败:', error);\n        if (error.response) {\n          this.createError = error.response.data.message || '创建文件失败，服务器错误';\n        } else if (error.request) {\n          this.createError = '无法连接到服务器，请检查网络连接';\n        } else {\n          this.createError = '创建文件失败，请稍后再试';\n        }\n      } finally {\n        this.creating = false;\n      }\n    },\n    viewFile(fileId) {\n      this.$router.push(`/file/${fileId}`);\n    },\n    confirmDelete(file) {\n      this.selectedFile = file;\n      this.showDeleteConfirm = true;\n    },\n    async deleteFile() {\n      if (!this.selectedFile || this.deleting) return;\n      this.deleting = true;\n      try {\n        await this.$axios.delete(`/file/${this.selectedFile.id}`);\n        await this.fetchFiles();\n        this.showDeleteConfirm = false;\n        this.selectedFile = null;\n      } catch (error) {\n        console.error('删除文件失败:', error);\n        if (error.response) {\n          alert(error.response.data.message || '删除文件失败，服务器错误');\n        } else {\n          alert('删除文件失败，请稍后再试');\n        }\n      } finally {\n        this.deleting = false;\n      }\n    },\n    formatFileSize(file) {\n      const size = file.fileSize || 0;\n      if (size < 1024) {\n        return `${size} B`;\n      } else if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(2)} KB`;\n      } else {\n        return `${(size / (1024 * 1024)).toFixed(2)} MB`;\n      }\n    },\n    formatDate(timestamp) {\n      if (!timestamp) return '未知';\n      try {\n        const date = new Date(timestamp);\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        });\n      } catch (e) {\n        console.error('日期格式化错误:', e);\n        return '日期格式错误';\n      }\n    },\n    translatePermission(permission) {\n      const permissionMap = {\n        'read': '只读',\n        'write': '只写',\n        'readwrite': '读写'\n      };\n      return permissionMap[permission] || permission;\n    },\n    editFile(file) {\n      this.editingFile = {\n        id: file.id,\n        filename: file.filename,\n        content: file.content,\n        permission: file.permission\n      };\n      this.showEditModal = true;\n    },\n    cancelEdit() {\n      this.showEditModal = false;\n      this.editingFile = null;\n      this.editError = '';\n    },\n    async updateFile() {\n      if (!this.editingFile) return;\n      this.updating = true;\n      this.editError = '';\n      try {\n        // 更新文件名\n        await this.$axios.put(`/file/name/${this.editingFile.id}`, {\n          filename: this.editingFile.filename\n        });\n\n        // 更新文件内容\n        await this.$axios.put(`/file/content/${this.editingFile.id}`, {\n          content: this.editingFile.content\n        });\n\n        // 更新文件权限\n        await this.$axios.put(`/file/permission/${this.editingFile.id}`, {\n          permission: this.editingFile.permission\n        });\n\n        // 刷新文件列表\n        await this.fetchFiles();\n        this.showEditModal = false;\n        this.editingFile = null;\n      } catch (error) {\n        console.error('更新文件失败:', error);\n        if (error.response && error.response.data) {\n          this.editError = error.response.data.message;\n        } else {\n          this.editError = '更新文件失败，请稍后再试';\n        }\n      } finally {\n        this.updating = false;\n      }\n    },\n    async openFile(file) {\n      this.opening = file.id;\n      try {\n        // 获取最新的文件内容\n        const response = await this.$axios.get(`/file/${file.id}`);\n        if (response.data.success) {\n          this.openedFile = response.data.file;\n          this.openFiles.add(file.id);\n          localStorage.setItem('openFiles', JSON.stringify([...this.openFiles]));\n          const index = this.files.findIndex(f => f.id === file.id);\n          if (index !== -1) {\n            this.files[index].isOpen = true;\n          }\n        } else {\n          throw new Error(response.data.message || '获取文件内容失败');\n        }\n      } catch (error) {\n        console.error('打开文件失败:', error);\n        alert(error.message || '打开文件失败，请稍后再试');\n      } finally {\n        this.opening = null;\n      }\n    },\n    async closeFile(file) {\n      this.closing = file.id;\n      try {\n        this.openFiles.delete(file.id);\n        localStorage.setItem('openFiles', JSON.stringify([...this.openFiles]));\n        const index = this.files.findIndex(f => f.id === file.id);\n        if (index !== -1) {\n          this.files[index].isOpen = false;\n        }\n      } catch (error) {\n        console.error('关闭文件失败:', error);\n        alert('关闭文件失败，请稍后再试');\n        this.openFiles.add(file.id);\n      } finally {\n        this.closing = null;\n      }\n    },\n    // 关闭打开的文件\n    closeOpenedFile() {\n      if (this.openedFile) {\n        const file = this.files.find(f => f.id === this.openedFile.id);\n        if (file) {\n          this.closeFile(file);\n        }\n        this.openedFile = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","files","error","userId","localStorage","getItem","newFile","filename","content","permission","creating","createError","createSuccess","showDeleteConfirm","selectedFile","deleting","showEditModal","editingFile","editError","updating","openFiles","Set","JSON","parse","opening","closing","openedFile","created","fetchFiles","methods","response","$axios","get","success","map","file","isOpen","has","id","console","message","request","createFile","post","parseInt","viewFile","fileId","$router","push","confirmDelete","deleteFile","delete","alert","formatFileSize","size","fileSize","toFixed","formatDate","timestamp","date","Date","toLocaleString","year","month","day","hour","minute","second","e","translatePermission","permissionMap","editFile","cancelEdit","updateFile","put","openFile","add","setItem","stringify","index","findIndex","f","Error","closeFile","closeOpenedFile","find"],"sources":["src/components/FileList.vue"],"sourcesContent":["<template>\r\n  <div class=\"file-list\">\r\n    <h2>我的文件</h2>\r\n    \r\n    <!-- 创建新文件表单 -->\r\n    <div class=\"card\">\r\n      <h3>创建新文件</h3>\r\n      <form @submit.prevent=\"createFile\">\r\n        <div class=\"form-group\">\r\n          <label for=\"filename\">文件名</label>\r\n          <input \r\n            id=\"filename\" \r\n            v-model=\"newFile.filename\" \r\n            type=\"text\" \r\n            placeholder=\"请输入文件名\" \r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"content\">文件内容</label>\r\n          <textarea \r\n            id=\"content\" \r\n            v-model=\"newFile.content\" \r\n            rows=\"4\" \r\n            placeholder=\"请输入文件内容\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"permission\">文件权限</label>\r\n          <select id=\"permission\" v-model=\"newFile.permission\" required>\r\n            <option value=\"read\">只读</option>\r\n            <option value=\"write\">只写</option>\r\n            <option value=\"readwrite\">读写</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div class=\"error\" v-if=\"createError\">{{ createError }}</div>\r\n        <div class=\"success\" v-if=\"createSuccess\">{{ createSuccess }}</div>\r\n        \r\n        <button type=\"submit\" :disabled=\"creating\">\r\n          {{ creating ? '创建中...' : '创建文件' }}\r\n        </button>\r\n      </form>\r\n    </div>\r\n    \r\n    <!-- 文件列表 -->\r\n    <div class=\"card file-table-card\">\r\n      <h3>文件列表</h3>\r\n      <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n      \r\n      <div v-else-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n        <button @click=\"fetchFiles\" class=\"retry-btn\">重试</button>\r\n      </div>\r\n      \r\n      <div v-else-if=\"files.length === 0\" class=\"empty-list\">\r\n        您还没有创建任何文件\r\n      </div>\r\n      \r\n      <div v-else>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>文件名</th>\r\n              <th>大小</th>\r\n              <th>权限</th>\r\n              <th>创建时间</th>\r\n              <th>操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"file in files\" :key=\"file.id\">\r\n              <td>{{ file.filename }}</td>\r\n              <td>{{ formatFileSize(file) }}</td>\r\n              <td>{{ translatePermission(file.permission) }}</td>\r\n              <td>{{ formatDate(file.createTime) }}</td>\r\n              <td class=\"actions\">\r\n                <button @click=\"viewFile(file.id)\" class=\"view-btn\">查看</button>\r\n                <button @click=\"editFile(file)\" class=\"edit-btn\">修改</button>\r\n                <button \r\n                  v-if=\"!file.isOpen\" \r\n                  @click=\"openFile(file)\" \r\n                  class=\"open-btn\"\r\n                  :disabled=\"opening === file.id\"\r\n                >\r\n                  {{ opening === file.id ? '打开中...' : '打开' }}\r\n                </button>\r\n                <button \r\n                  v-else \r\n                  @click=\"closeFile(file)\" \r\n                  class=\"close-btn\"\r\n                  :disabled=\"closing === file.id\"\r\n                >\r\n                  {{ closing === file.id ? '关闭中...' : '关闭' }}\r\n                </button>\r\n                <button @click=\"confirmDelete(file)\" class=\"delete-btn\">删除</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 删除确认对话框 -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"showDeleteConfirm\" class=\"delete-modal\">\r\n        <div class=\"delete-modal-content card\">\r\n          <h3>确认删除</h3>\r\n          <p>您确定要删除文件 <strong>{{ selectedFile.filename }}</strong> 吗？</p>\r\n          <p class=\"warning\">此操作不可撤销！</p>\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"deleteFile\" class=\"confirm-delete\">确认删除</button>\r\n            <button @click=\"showDeleteConfirm = false\" class=\"cancel-delete\">取消</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    \r\n    <!-- 添加修改文件的模态框 -->\r\n    <div v-if=\"showEditModal\" class=\"modal\">\r\n      <div class=\"modal-content card\">\r\n        <h3>修改文件</h3>\r\n        <form @submit.prevent=\"updateFile\">\r\n          <div class=\"form-group\">\r\n            <label for=\"edit-filename\">文件名</label>\r\n            <input \r\n              id=\"edit-filename\" \r\n              v-model=\"editingFile.filename\" \r\n              type=\"text\" \r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"edit-content\">文件内容</label>\r\n            <textarea \r\n              id=\"edit-content\" \r\n              v-model=\"editingFile.content\" \r\n              rows=\"6\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"edit-permission\">文件权限</label>\r\n            <select id=\"edit-permission\" v-model=\"editingFile.permission\">\r\n              <option value=\"read\">只读</option>\r\n              <option value=\"write\">只写</option>\r\n              <option value=\"readwrite\">读写</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"error\" v-if=\"editError\">{{ editError }}</div>\r\n          \r\n          <div class=\"modal-actions\">\r\n            <button type=\"submit\" :disabled=\"updating\">\r\n              {{ updating ? '保存中...' : '保存修改' }}\r\n            </button>\r\n            <button type=\"button\" @click=\"cancelEdit\" class=\"cancel-btn\">取消</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 添加打开文件的模态框 -->\r\n    <transition name=\"fade\">\r\n      <div v-if=\"openedFile\" class=\"file-modal\">\r\n        <div class=\"file-modal-content card\">\r\n          <div class=\"file-modal-header\">\r\n            <h3>{{ openedFile.filename }}</h3>\r\n            <button class=\"close-modal-btn\" @click=\"closeOpenedFile\">×</button>\r\n          </div>\r\n          \r\n          <div class=\"file-info-bar\">\r\n            <span>大小: {{ formatFileSize(openedFile) }}</span>\r\n            <span>权限: {{ translatePermission(openedFile.permission) }}</span>\r\n            <span>创建时间: {{ formatDate(openedFile.createTime) }}</span>\r\n          </div>\r\n          \r\n          <div class=\"file-content-viewer\">\r\n            <pre>{{ openedFile.content }}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileList',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      files: [],\r\n      error: '',\r\n      userId: localStorage.getItem('userId'),\r\n      \r\n      // 新文件表单\r\n      newFile: {\r\n        filename: '',\r\n        content: '',\r\n        permission: 'read'\r\n      },\r\n      creating: false,\r\n      createError: '',\r\n      createSuccess: '',\r\n      \r\n      // 删除确认\r\n      showDeleteConfirm: false,\r\n      selectedFile: null,\r\n      deleting: false,\r\n      \r\n      // 添加编辑相关的数据\r\n      showEditModal: false,\r\n      editingFile: null,\r\n      editError: '',\r\n      updating: false,\r\n      \r\n      // 记录打开的文件ID列表\r\n      openFiles: new Set(JSON.parse(localStorage.getItem('openFiles') || '[]')),\r\n      opening: null,\r\n      closing: null,\r\n      openedFile: null, // 当前打开的文件\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchFiles();\r\n  },\r\n  methods: {\r\n    async fetchFiles() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      \r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        const response = await this.$axios.get(`/file/list/${userId}`);\r\n        \r\n        if (response.data.success) {\r\n          // 为每个文件添加打开状态\r\n          this.files = (response.data.files || []).map(file => ({\r\n            ...file,\r\n            isOpen: this.openFiles.has(file.id)\r\n          }));\r\n        } else {\r\n          this.error = '获取文件列表失败';\r\n        }\r\n      } catch (error) {\r\n        console.error('获取文件列表失败:', error);\r\n        if (error.response) {\r\n          console.error('错误响应:', error.response.data);\r\n          this.error = error.response.data.message || '获取文件列表失败，服务器错误';\r\n        } else if (error.request) {\r\n          this.error = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          this.error = '获取文件列表失败，请稍后再试';\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async createFile() {\r\n      this.creating = true;\r\n      this.createError = '';\r\n      this.createSuccess = '';\r\n      \r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        await this.$axios.post('/file/create', {\r\n          userId: parseInt(userId),\r\n          filename: this.newFile.filename,\r\n          content: this.newFile.content || '',\r\n          permission: this.newFile.permission\r\n        });\r\n        \r\n        this.createSuccess = '文件创建成功！';\r\n        // 重置表单\r\n        this.newFile = {\r\n          filename: '',\r\n          content: '',\r\n          permission: 'read'\r\n        };\r\n        // 刷新文件列表\r\n        await this.fetchFiles();\r\n      } catch (error) {\r\n        console.error('创建文件失败:', error);\r\n        if (error.response) {\r\n          this.createError = error.response.data.message || '创建文件失败，服务器错误';\r\n        } else if (error.request) {\r\n          this.createError = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          this.createError = '创建文件失败，请稍后再试';\r\n        }\r\n      } finally {\r\n        this.creating = false;\r\n      }\r\n    },\r\n    \r\n    viewFile(fileId) {\r\n      this.$router.push(`/file/${fileId}`);\r\n    },\r\n    \r\n    confirmDelete(file) {\r\n      this.selectedFile = file;\r\n      this.showDeleteConfirm = true;\r\n    },\r\n    \r\n    async deleteFile() {\r\n      if (!this.selectedFile || this.deleting) return;\r\n      \r\n      this.deleting = true;\r\n      try {\r\n        await this.$axios.delete(`/file/${this.selectedFile.id}`);\r\n        await this.fetchFiles();\r\n        this.showDeleteConfirm = false;\r\n        this.selectedFile = null;\r\n      } catch (error) {\r\n        console.error('删除文件失败:', error);\r\n        if (error.response) {\r\n          alert(error.response.data.message || '删除文件失败，服务器错误');\r\n        } else {\r\n          alert('删除文件失败，请稍后再试');\r\n        }\r\n      } finally {\r\n        this.deleting = false;\r\n      }\r\n    },\r\n    \r\n    formatFileSize(file) {\r\n      const size = file.fileSize || 0;\r\n      if (size < 1024) {\r\n        return `${size} B`;\r\n      } else if (size < 1024 * 1024) {\r\n        return `${(size / 1024).toFixed(2)} KB`;\r\n      } else {\r\n        return `${(size / (1024 * 1024)).toFixed(2)} MB`;\r\n      }\r\n    },\r\n    \r\n    formatDate(timestamp) {\r\n      if (!timestamp) return '未知';\r\n      try {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        });\r\n      } catch (e) {\r\n        console.error('日期格式化错误:', e);\r\n        return '日期格式错误';\r\n      }\r\n    },\r\n    \r\n    translatePermission(permission) {\r\n      const permissionMap = {\r\n        'read': '只读',\r\n        'write': '只写',\r\n        'readwrite': '读写'\r\n      };\r\n      return permissionMap[permission] || permission;\r\n    },\r\n    \r\n    editFile(file) {\r\n      this.editingFile = {\r\n        id: file.id,\r\n        filename: file.filename,\r\n        content: file.content,\r\n        permission: file.permission\r\n      };\r\n      this.showEditModal = true;\r\n    },\r\n    \r\n    cancelEdit() {\r\n      this.showEditModal = false;\r\n      this.editingFile = null;\r\n      this.editError = '';\r\n    },\r\n    \r\n    async updateFile() {\r\n      if (!this.editingFile) return;\r\n      \r\n      this.updating = true;\r\n      this.editError = '';\r\n      \r\n      try {\r\n        // 更新文件名\r\n        await this.$axios.put(`/file/name/${this.editingFile.id}`, {\r\n          filename: this.editingFile.filename\r\n        });\r\n        \r\n        // 更新文件内容\r\n        await this.$axios.put(`/file/content/${this.editingFile.id}`, {\r\n          content: this.editingFile.content\r\n        });\r\n        \r\n        // 更新文件权限\r\n        await this.$axios.put(`/file/permission/${this.editingFile.id}`, {\r\n          permission: this.editingFile.permission\r\n        });\r\n        \r\n        // 刷新文件列表\r\n        await this.fetchFiles();\r\n        this.showEditModal = false;\r\n        this.editingFile = null;\r\n      } catch (error) {\r\n        console.error('更新文件失败:', error);\r\n        if (error.response && error.response.data) {\r\n          this.editError = error.response.data.message;\r\n        } else {\r\n          this.editError = '更新文件失败，请稍后再试';\r\n        }\r\n      } finally {\r\n        this.updating = false;\r\n      }\r\n    },\r\n    \r\n    async openFile(file) {\r\n      this.opening = file.id;\r\n      try {\r\n        // 获取最新的文件内容\r\n        const response = await this.$axios.get(`/file/${file.id}`);\r\n        if (response.data.success) {\r\n          this.openedFile = response.data.file;\r\n          this.openFiles.add(file.id);\r\n          localStorage.setItem('openFiles', JSON.stringify([...this.openFiles]));\r\n          const index = this.files.findIndex(f => f.id === file.id);\r\n          if (index !== -1) {\r\n            this.files[index].isOpen = true;\r\n          }\r\n        } else {\r\n          throw new Error(response.data.message || '获取文件内容失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('打开文件失败:', error);\r\n        alert(error.message || '打开文件失败，请稍后再试');\r\n      } finally {\r\n        this.opening = null;\r\n      }\r\n    },\r\n    \r\n    async closeFile(file) {\r\n      this.closing = file.id;\r\n      try {\r\n        this.openFiles.delete(file.id);\r\n        localStorage.setItem('openFiles', JSON.stringify([...this.openFiles]));\r\n        const index = this.files.findIndex(f => f.id === file.id);\r\n        if (index !== -1) {\r\n          this.files[index].isOpen = false;\r\n        }\r\n      } catch (error) {\r\n        console.error('关闭文件失败:', error);\r\n        alert('关闭文件失败，请稍后再试');\r\n        this.openFiles.add(file.id);\r\n      } finally {\r\n        this.closing = null;\r\n      }\r\n    },\r\n    \r\n    // 关闭打开的文件\r\n    closeOpenedFile() {\r\n      if (this.openedFile) {\r\n        const file = this.files.find(f => f.id === this.openedFile.id);\r\n        if (file) {\r\n          this.closeFile(file);\r\n        }\r\n        this.openedFile = null;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.file-list h2 {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.file-table-card {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.loading, .empty-list {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 0.3rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.actions button {\r\n  padding: 0.5rem 1rem;\r\n  margin: 0 0.2rem;\r\n  border-radius: 6px;\r\n  font-weight: 500;\r\n}\r\n\r\n.view-btn {\r\n  background: linear-gradient(135deg, #3498db, #2980b9);\r\n}\r\n\r\n.edit-btn {\r\n  background: linear-gradient(135deg, #2ecc71, #27ae60);\r\n}\r\n\r\n.open-btn {\r\n  background: linear-gradient(135deg, #f39c12, #d35400);\r\n}\r\n\r\n.close-btn {\r\n  background: linear-gradient(135deg, #95a5a6, #7f8c8d);\r\n}\r\n\r\n.delete-btn {\r\n  background: linear-gradient(135deg, #e74c3c, #c0392b);\r\n}\r\n\r\n.delete-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.delete-modal-content {\r\n  width: 90%;\r\n  max-width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.delete-modal-content h3 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.warning {\r\n  color: #e74c3c;\r\n  margin: 1rem 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.confirm-delete {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.cancel-delete {\r\n  background-color: #7f8c8d;\r\n}\r\n\r\n/* 添加表格样式 */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 1rem;\r\n}\r\n\r\nth, td {\r\n  padding: 0.75rem;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\nth {\r\n  font-weight: 600;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.error {\r\n  color: #e74c3c;\r\n  padding: 1rem;\r\n  background-color: #fdf3f2;\r\n  border-radius: 4px;\r\n  margin: 1rem 0;\r\n  text-align: center;\r\n}\r\n\r\n.retry-btn {\r\n  margin-top: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.retry-btn:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n}\r\n\r\n.empty-list {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #666;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.view-btn, .delete-btn {\r\n  padding: 0.25rem 0.75rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.view-btn {\r\n  background-color: #3498db;\r\n}\r\n\r\n.view-btn:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  width: 90%;\r\n  max-width: 500px;\r\n  padding: 2rem;\r\n}\r\n\r\n.modal-content h3 {\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.edit-btn {\r\n  background-color: #2ecc71;\r\n}\r\n\r\n.edit-btn:hover {\r\n  background-color: #27ae60;\r\n}\r\n\r\n.open-btn {\r\n  background-color: #f39c12;\r\n}\r\n\r\n.open-btn:hover:not(:disabled) {\r\n  background-color: #d68910;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #95a5a6;\r\n}\r\n\r\n.close-btn:hover:not(:disabled) {\r\n  background-color: #7f8c8d;\r\n}\r\n\r\n.open-btn:disabled,\r\n.close-btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.file-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.file-modal-content {\r\n  width: 90%;\r\n  max-width: 800px;\r\n  height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.file-modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.2rem;\r\n  border-bottom: 1px solid #eee;\r\n  background: linear-gradient(135deg, #2c3e50, #3498db);\r\n  color: white;\r\n  border-radius: 12px 12px 0 0;\r\n}\r\n\r\n.file-modal-header h3 {\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n  color: white;\r\n}\r\n\r\n.close-modal-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  line-height: 1;\r\n}\r\n\r\n.close-modal-btn:hover {\r\n  color: #d3d3d3;\r\n}\r\n\r\n.file-info-bar {\r\n  padding: 1rem 1.5rem;\r\n  background: #f8fafc;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  gap: 2rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.file-content-viewer {\r\n  flex: 1;\r\n  padding: 2rem;\r\n  overflow-y: auto;\r\n  background: #fafafa;\r\n}\r\n\r\n.file-content-viewer pre {\r\n  margin: 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-family: \"SFMono-Regular\", Consolas, \"Liberation Mono\", Menlo, monospace;\r\n  line-height: 1.6;\r\n  padding: 1rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #edf2f7;\r\n}\r\n\r\n/* 美化创建文件表单 */\r\n.card h3 {\r\n  font-size: 1.5rem;\r\n  color: #2c3e50;\r\n  margin-bottom: 1.5rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 2px solid #edf2f7;\r\n}\r\n\r\n/* 添加动画效果 */\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}