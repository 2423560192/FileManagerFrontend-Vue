{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      username: '',\n      password: '',\n      loading: false,\n      error: '',\n      showRegisterForm: false,\n      regUsername: '',\n      regPassword: '',\n      regLoading: false,\n      regError: '',\n      regSuccess: ''\n    };\n  },\n  created() {\n    // 如果已登录则跳转到文件列表页\n    if (localStorage.getItem('userId')) {\n      this.$router.push('/files');\n    }\n  },\n  methods: {\n    async login() {\n      this.loading = true;\n      this.error = '';\n      try {\n        const response = await this.$axios.post('/user/login', {\n          username: this.username,\n          password: this.password\n        });\n        if (response.data.success) {\n          // 使用实际的userId\n          await this.$store.dispatch('login', {\n            username: this.username,\n            userId: response.data.userId\n          });\n          this.$router.push('/files');\n        } else {\n          this.error = response.data.message || '登录失败';\n        }\n      } catch (error) {\n        console.error('登录失败:', error);\n        this.error = error.response?.data?.message || '登录失败，请稍后再试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async register() {\n      this.regLoading = true;\n      this.regError = '';\n      this.regSuccess = '';\n      try {\n        const response = await this.$axios.post('/user/register', {\n          username: this.regUsername,\n          password: this.regPassword\n        });\n\n        // 检查API返回的success字段\n        if (response.data.success) {\n          // 注册成功，根据API直接获取userId\n          localStorage.setItem('userId', response.data.userId);\n          localStorage.setItem('username', this.regUsername);\n          this.regSuccess = '注册成功，正在为您自动登录...';\n\n          // 延迟跳转，给用户时间看到成功消息\n          setTimeout(() => {\n            this.$router.push('/files');\n          }, 1000);\n        } else {\n          // API返回了success=false\n          this.regError = response.data.message || '注册失败，可能用户名已存在';\n        }\n      } catch (error) {\n        console.error('注册错误:', error);\n        // 详细错误日志\n        if (error.response) {\n          console.error('错误状态:', error.response.status);\n          console.error('错误数据:', error.response.data);\n          this.regError = error.response.data.message || '注册失败，服务器错误';\n        } else if (error.request) {\n          console.error('没有收到响应');\n          this.regError = '无法连接到服务器，请检查网络连接';\n        } else {\n          console.error('请求错误:', error.message);\n          this.regError = '注册请求错误';\n        }\n      } finally {\n        this.regLoading = false;\n      }\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","loading","error","showRegisterForm","regUsername","regPassword","regLoading","regError","regSuccess","created","localStorage","getItem","$router","push","methods","login","response","$axios","post","success","$store","dispatch","userId","message","console","register","setItem","setTimeout","status","request","goToRegister"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <div class=\"login-header\">\r\n        <div class=\"logo\">📁</div>\r\n        <h2>文件管理系统</h2>\r\n        <p class=\"subtitle\">请登录您的账号</p>\r\n      </div>\r\n      \r\n      <form @submit.prevent=\"login\" class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <div class=\"input-wrapper\">\r\n            <i class=\"icon\">👤</i>\r\n            <input \r\n              v-model=\"username\" \r\n              type=\"text\" \r\n              placeholder=\"请输入用户名\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <div class=\"input-wrapper\">\r\n            <i class=\"icon\">🔒</i>\r\n            <input \r\n              v-model=\"password\" \r\n              type=\"password\" \r\n              placeholder=\"请输入密码\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n        \r\n        <button type=\"submit\" :disabled=\"loading\" class=\"login-btn\">\r\n          <span class=\"btn-content\">\r\n            <span v-if=\"loading\" class=\"loading-spinner\"></span>\r\n            {{ loading ? '登录中...' : '登录' }}\r\n          </span>\r\n        </button>\r\n        \r\n        <div class=\"register-link\">\r\n          <span>还没有账号？</span>\r\n          <router-link to=\"/register\" class=\"register-btn\">立即注册</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      loading: false,\r\n      error: '',\r\n      \r\n      showRegisterForm: false,\r\n      regUsername: '',\r\n      regPassword: '',\r\n      regLoading: false,\r\n      regError: '',\r\n      regSuccess: ''\r\n    }\r\n  },\r\n  created() {\r\n    // 如果已登录则跳转到文件列表页\r\n    if (localStorage.getItem('userId')) {\r\n      this.$router.push('/files');\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      \r\n      try {\r\n        const response = await this.$axios.post('/user/login', {\r\n          username: this.username,\r\n          password: this.password\r\n        });\r\n        \r\n        if (response.data.success) {\r\n          // 使用实际的userId\r\n          await this.$store.dispatch('login', {\r\n            username: this.username,\r\n            userId: response.data.userId\r\n          });\r\n          this.$router.push('/files');\r\n        } else {\r\n          this.error = response.data.message || '登录失败';\r\n        }\r\n      } catch (error) {\r\n        console.error('登录失败:', error);\r\n        this.error = error.response?.data?.message || '登录失败，请稍后再试';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async register() {\r\n      this.regLoading = true;\r\n      this.regError = '';\r\n      this.regSuccess = '';\r\n      \r\n      try {\r\n        const response = await this.$axios.post('/user/register', {\r\n          username: this.regUsername,\r\n          password: this.regPassword\r\n        });\r\n        \r\n        // 检查API返回的success字段\r\n        if (response.data.success) {\r\n          // 注册成功，根据API直接获取userId\r\n          localStorage.setItem('userId', response.data.userId);\r\n          localStorage.setItem('username', this.regUsername);\r\n          \r\n          this.regSuccess = '注册成功，正在为您自动登录...';\r\n          \r\n          // 延迟跳转，给用户时间看到成功消息\r\n          setTimeout(() => {\r\n            this.$router.push('/files');\r\n          }, 1000);\r\n        } else {\r\n          // API返回了success=false\r\n          this.regError = response.data.message || '注册失败，可能用户名已存在';\r\n        }\r\n      } catch (error) {\r\n        console.error('注册错误:', error);\r\n        // 详细错误日志\r\n        if (error.response) {\r\n          console.error('错误状态:', error.response.status);\r\n          console.error('错误数据:', error.response.data);\r\n          this.regError = error.response.data.message || '注册失败，服务器错误';\r\n        } else if (error.request) {\r\n          console.error('没有收到响应');\r\n          this.regError = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          console.error('请求错误:', error.message);\r\n          this.regError = '注册请求错误';\r\n        }\r\n      } finally {\r\n        this.regLoading = false;\r\n      }\r\n    },\r\n    \r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\r\n  padding: 1rem;\r\n}\r\n\r\n.login-card {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  transform: translateY(0);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.login-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: linear-gradient(135deg, #2c3e50, #3498db);\r\n  color: white;\r\n}\r\n\r\n.logo {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n  animation: float 3s ease-in-out infinite;\r\n}\r\n\r\n.subtitle {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n.login-form {\r\n  padding: 2rem;\r\n}\r\n\r\n.input-wrapper {\r\n  position: relative;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.icon {\r\n  position: absolute;\r\n  left: 1rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  font-style: normal;\r\n  color: #94a3b8;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 1rem 1rem 1rem 3rem;\r\n  border: 2px solid #e2e8f0;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #3498db;\r\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: linear-gradient(135deg, #3498db, #2980b9);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.login-btn:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);\r\n}\r\n\r\n.login-btn:disabled {\r\n  opacity: 0.7;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-content {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 3px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: white;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.register-link {\r\n  margin-top: 1.5rem;\r\n  text-align: center;\r\n  color: #64748b;\r\n}\r\n\r\n.register-btn {\r\n  color: #3498db;\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  margin-left: 0.5rem;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\n.register-btn:hover {\r\n  color: #2980b9;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes float {\r\n  0%, 100% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-10px);\r\n  }\r\n}\r\n\r\n.error {\r\n  background: rgba(231, 76, 60, 0.1);\r\n  color: #e74c3c;\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.9rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.error::before {\r\n  content: \"⚠️\";\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MAEAC,gBAAA;MACAC,WAAA;MACAC,WAAA;MACAC,UAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,IAAAC,YAAA,CAAAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,MAAA;MACA,KAAAd,OAAA;MACA,KAAAC,KAAA;MAEA;QACA,MAAAc,QAAA,cAAAC,MAAA,CAAAC,IAAA;UACAnB,QAAA,OAAAA,QAAA;UACAC,QAAA,OAAAA;QACA;QAEA,IAAAgB,QAAA,CAAAlB,IAAA,CAAAqB,OAAA;UACA;UACA,WAAAC,MAAA,CAAAC,QAAA;YACAtB,QAAA,OAAAA,QAAA;YACAuB,MAAA,EAAAN,QAAA,CAAAlB,IAAA,CAAAwB;UACA;UACA,KAAAV,OAAA,CAAAC,IAAA;QACA;UACA,KAAAX,KAAA,GAAAc,QAAA,CAAAlB,IAAA,CAAAyB,OAAA;QACA;MACA,SAAArB,KAAA;QACAsB,OAAA,CAAAtB,KAAA,UAAAA,KAAA;QACA,KAAAA,KAAA,GAAAA,KAAA,CAAAc,QAAA,EAAAlB,IAAA,EAAAyB,OAAA;MACA;QACA,KAAAtB,OAAA;MACA;IACA;IAEA,MAAAwB,SAAA;MACA,KAAAnB,UAAA;MACA,KAAAC,QAAA;MACA,KAAAC,UAAA;MAEA;QACA,MAAAQ,QAAA,cAAAC,MAAA,CAAAC,IAAA;UACAnB,QAAA,OAAAK,WAAA;UACAJ,QAAA,OAAAK;QACA;;QAEA;QACA,IAAAW,QAAA,CAAAlB,IAAA,CAAAqB,OAAA;UACA;UACAT,YAAA,CAAAgB,OAAA,WAAAV,QAAA,CAAAlB,IAAA,CAAAwB,MAAA;UACAZ,YAAA,CAAAgB,OAAA,kBAAAtB,WAAA;UAEA,KAAAI,UAAA;;UAEA;UACAmB,UAAA;YACA,KAAAf,OAAA,CAAAC,IAAA;UACA;QACA;UACA;UACA,KAAAN,QAAA,GAAAS,QAAA,CAAAlB,IAAA,CAAAyB,OAAA;QACA;MACA,SAAArB,KAAA;QACAsB,OAAA,CAAAtB,KAAA,UAAAA,KAAA;QACA;QACA,IAAAA,KAAA,CAAAc,QAAA;UACAQ,OAAA,CAAAtB,KAAA,UAAAA,KAAA,CAAAc,QAAA,CAAAY,MAAA;UACAJ,OAAA,CAAAtB,KAAA,UAAAA,KAAA,CAAAc,QAAA,CAAAlB,IAAA;UACA,KAAAS,QAAA,GAAAL,KAAA,CAAAc,QAAA,CAAAlB,IAAA,CAAAyB,OAAA;QACA,WAAArB,KAAA,CAAA2B,OAAA;UACAL,OAAA,CAAAtB,KAAA;UACA,KAAAK,QAAA;QACA;UACAiB,OAAA,CAAAtB,KAAA,UAAAA,KAAA,CAAAqB,OAAA;UACA,KAAAhB,QAAA;QACA;MACA;QACA,KAAAD,UAAA;MACA;IACA;IAEAwB,aAAA;MACA,KAAAlB,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}