{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport axios from 'axios';\nVue.config.productionTip = false;\n\n// 配置全局Axios，直接指向后端API地址\naxios.defaults.baseURL = 'http://localhost:8080/api';\nVue.prototype.$axios = axios;\n\n// 路由守卫，检查是否已登录\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.state.isLoggedIn;\n\n  // 如果是登录或注册页面\n  if (to.path === '/login' || to.path === '/register') {\n    if (isLoggedIn) {\n      // 已登录时访问登录/注册页面，重定向到文件列表\n      next({\n        path: '/files',\n        replace: true\n      });\n    } else {\n      // 未登录时允许访问登录/注册页面\n      next();\n    }\n  } else {\n    // 访问其他页面时检查登录状态\n    if (!isLoggedIn) {\n      // 未登录时重定向到登录页面\n      next({\n        path: '/login',\n        replace: true\n      });\n    } else {\n      // 已登录允许访问\n      next();\n    }\n  }\n});\n\n// 创建Vue实例时使用事件总线\nconst app = new Vue({\n  router,\n  store,\n  data: {\n    // 添加事件总线\n    eventBus: new Vue()\n  },\n  render: h => h(App)\n}).$mount('#app');\n\n// 导出事件总线，供其他组件使用\nexport const eventBus = app.eventBus;","map":{"version":3,"names":["Vue","App","router","store","axios","config","productionTip","defaults","baseURL","prototype","$axios","beforeEach","to","from","next","isLoggedIn","state","path","replace","app","data","eventBus","render","h","$mount"],"sources":["E:/project/springos-vue/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport axios from 'axios'\r\n\r\nVue.config.productionTip = false\r\n\r\n// 配置全局Axios，直接指向后端API地址\r\naxios.defaults.baseURL = 'http://localhost:8080/api'\r\nVue.prototype.$axios = axios\r\n\r\n// 路由守卫，检查是否已登录\r\nrouter.beforeEach((to, from, next) => {\r\n  const isLoggedIn = store.state.isLoggedIn\r\n  \r\n  // 如果是登录或注册页面\r\n  if (to.path === '/login' || to.path === '/register') {\r\n    if (isLoggedIn) {\r\n      // 已登录时访问登录/注册页面，重定向到文件列表\r\n      next({ path: '/files', replace: true })\r\n    } else {\r\n      // 未登录时允许访问登录/注册页面\r\n      next()\r\n    }\r\n  } else {\r\n    // 访问其他页面时检查登录状态\r\n    if (!isLoggedIn) {\r\n      // 未登录时重定向到登录页面\r\n      next({ path: '/login', replace: true })\r\n    } else {\r\n      // 已登录允许访问\r\n      next()\r\n    }\r\n  }\r\n})\r\n\r\n// 创建Vue实例时使用事件总线\r\nconst app = new Vue({\r\n  router,\r\n  store,\r\n  data: {\r\n    // 添加事件总线\r\n    eventBus: new Vue()\r\n  },\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n\r\n// 导出事件总线，供其他组件使用\r\nexport const eventBus = app.eventBus "],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAEzBJ,GAAG,CAACK,MAAM,CAACC,aAAa,GAAG,KAAK;;AAEhC;AACAF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,2BAA2B;AACpDR,GAAG,CAACS,SAAS,CAACC,MAAM,GAAGN,KAAK;;AAE5B;AACAF,MAAM,CAACS,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAGZ,KAAK,CAACa,KAAK,CAACD,UAAU;;EAEzC;EACA,IAAIH,EAAE,CAACK,IAAI,KAAK,QAAQ,IAAIL,EAAE,CAACK,IAAI,KAAK,WAAW,EAAE;IACnD,IAAIF,UAAU,EAAE;MACd;MACAD,IAAI,CAAC;QAAEG,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC,CAAC,MAAM;MACL;MACAJ,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACA,IAAI,CAACC,UAAU,EAAE;MACf;MACAD,IAAI,CAAC;QAAEG,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACzC,CAAC,MAAM;MACL;MACAJ,IAAI,CAAC,CAAC;IACR;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMK,GAAG,GAAG,IAAInB,GAAG,CAAC;EAClBE,MAAM;EACNC,KAAK;EACLiB,IAAI,EAAE;IACJ;IACAC,QAAQ,EAAE,IAAIrB,GAAG,CAAC;EACpB,CAAC;EACDsB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACtB,GAAG;AACpB,CAAC,CAAC,CAACuB,MAAM,CAAC,MAAM,CAAC;;AAEjB;AACA,OAAO,MAAMH,QAAQ,GAAGF,GAAG,CAACE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}