{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'FileList',\n  data() {\n    return {\n      loading: true,\n      files: [],\n      error: '',\n      userId: localStorage.getItem('userId'),\n      // 新文件表单\n      newFile: {\n        filename: '',\n        content: '',\n        permission: 'read'\n      },\n      creating: false,\n      createError: '',\n      createSuccess: '',\n      // 删除确认\n      showDeleteConfirm: false,\n      selectedFile: null,\n      deleting: false\n    };\n  },\n  created() {\n    this.fetchFiles();\n  },\n  methods: {\n    async fetchFiles() {\n      this.loading = true;\n      this.error = '';\n      try {\n        const userId = localStorage.getItem('userId');\n        const response = await this.$axios.get(`/file/list/${userId}`);\n        this.files = response.data;\n      } catch (error) {\n        console.error('获取文件列表失败:', error);\n        if (error.response) {\n          this.error = error.response.data.message || '获取文件列表失败，服务器错误';\n        } else if (error.request) {\n          this.error = '无法连接到服务器，请检查网络连接';\n        } else {\n          this.error = '获取文件列表失败，请稍后再试';\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async createFile() {\n      this.creating = true;\n      this.createError = '';\n      this.createSuccess = '';\n      try {\n        const userId = localStorage.getItem('userId');\n        await this.$axios.post('/file/create', {\n          userId: parseInt(userId),\n          filename: this.newFile.filename,\n          content: this.newFile.content || '',\n          permission: this.newFile.permission\n        });\n        this.createSuccess = '文件创建成功！';\n        // 重置表单\n        this.newFile = {\n          filename: '',\n          content: '',\n          permission: 'read'\n        };\n        // 刷新文件列表\n        await this.fetchFiles();\n      } catch (error) {\n        console.error('创建文件失败:', error);\n        if (error.response) {\n          this.createError = error.response.data.message || '创建文件失败，服务器错误';\n        } else if (error.request) {\n          this.createError = '无法连接到服务器，请检查网络连接';\n        } else {\n          this.createError = '创建文件失败，请稍后再试';\n        }\n      } finally {\n        this.creating = false;\n      }\n    },\n    viewFile(fileId) {\n      this.$router.push(`/file/${fileId}`);\n    },\n    confirmDelete(file) {\n      this.selectedFile = file;\n      this.showDeleteConfirm = true;\n    },\n    async deleteFile() {\n      if (!this.selectedFile || this.deleting) return;\n      this.deleting = true;\n      try {\n        await this.$axios.delete(`/file/${this.selectedFile.id}`);\n        await this.fetchFiles();\n        this.showDeleteConfirm = false;\n        this.selectedFile = null;\n      } catch (error) {\n        console.error('删除文件失败:', error);\n        if (error.response) {\n          alert(error.response.data.message || '删除文件失败，服务器错误');\n        } else {\n          alert('删除文件失败，请稍后再试');\n        }\n      } finally {\n        this.deleting = false;\n      }\n    },\n    formatFileSize(file) {\n      const size = file.fileSize || 0;\n      if (size < 1024) {\n        return `${size} B`;\n      } else if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(2)} KB`;\n      } else {\n        return `${(size / (1024 * 1024)).toFixed(2)} MB`;\n      }\n    },\n    formatDate(timestamp) {\n      if (!timestamp) return '未知';\n      try {\n        const date = new Date(timestamp);\n        return date.toLocaleString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        });\n      } catch (e) {\n        console.error('日期格式化错误:', e);\n        return '日期格式错误';\n      }\n    },\n    translatePermission(permission) {\n      const permissionMap = {\n        'read': '只读',\n        'write': '只写',\n        'readwrite': '读写'\n      };\n      return permissionMap[permission] || permission;\n    }\n  }\n};","map":{"version":3,"names":["name","data","loading","files","error","userId","localStorage","getItem","newFile","filename","content","permission","creating","createError","createSuccess","showDeleteConfirm","selectedFile","deleting","created","fetchFiles","methods","response","$axios","get","console","message","request","createFile","post","parseInt","viewFile","fileId","$router","push","confirmDelete","file","deleteFile","delete","id","alert","formatFileSize","size","fileSize","toFixed","formatDate","timestamp","date","Date","toLocaleString","year","month","day","hour","minute","second","e","translatePermission","permissionMap"],"sources":["src/components/FileList.vue"],"sourcesContent":["<template>\r\n  <div class=\"file-list\">\r\n    <h2>我的文件</h2>\r\n    \r\n    <!-- 创建新文件表单 -->\r\n    <div class=\"card\">\r\n      <h3>创建新文件</h3>\r\n      <form @submit.prevent=\"createFile\">\r\n        <div class=\"form-group\">\r\n          <label for=\"filename\">文件名</label>\r\n          <input \r\n            id=\"filename\" \r\n            v-model=\"newFile.filename\" \r\n            type=\"text\" \r\n            placeholder=\"请输入文件名\" \r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"content\">文件内容</label>\r\n          <textarea \r\n            id=\"content\" \r\n            v-model=\"newFile.content\" \r\n            rows=\"4\" \r\n            placeholder=\"请输入文件内容\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"permission\">文件权限</label>\r\n          <select id=\"permission\" v-model=\"newFile.permission\" required>\r\n            <option value=\"read\">只读</option>\r\n            <option value=\"write\">只写</option>\r\n            <option value=\"readwrite\">读写</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div class=\"error\" v-if=\"createError\">{{ createError }}</div>\r\n        <div class=\"success\" v-if=\"createSuccess\">{{ createSuccess }}</div>\r\n        \r\n        <button type=\"submit\" :disabled=\"creating\">\r\n          {{ creating ? '创建中...' : '创建文件' }}\r\n        </button>\r\n      </form>\r\n    </div>\r\n    \r\n    <!-- 文件列表 -->\r\n    <div class=\"card file-table-card\">\r\n      <h3>文件列表</h3>\r\n      <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n      \r\n      <div v-else-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n        <button @click=\"fetchFiles\" class=\"retry-btn\">重试</button>\r\n      </div>\r\n      \r\n      <div v-else-if=\"files.length === 0\" class=\"empty-list\">\r\n        您还没有创建任何文件\r\n      </div>\r\n      \r\n      <div v-else>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>文件名</th>\r\n              <th>大小</th>\r\n              <th>权限</th>\r\n              <th>创建时间</th>\r\n              <th>操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"file in files\" :key=\"file.id\">\r\n              <td>{{ file.filename }}</td>\r\n              <td>{{ formatFileSize(file) }}</td>\r\n              <td>{{ translatePermission(file.permission) }}</td>\r\n              <td>{{ formatDate(file.createTime) }}</td>\r\n              <td class=\"actions\">\r\n                <button @click=\"viewFile(file.id)\" class=\"view-btn\">查看</button>\r\n                <button @click=\"confirmDelete(file)\" class=\"delete-btn\">删除</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 删除确认对话框 -->\r\n    <div v-if=\"showDeleteConfirm\" class=\"delete-modal\">\r\n      <div class=\"delete-modal-content card\">\r\n        <h3>确认删除</h3>\r\n        <p>您确定要删除文件 <strong>{{ selectedFile.filename }}</strong> 吗？</p>\r\n        <p class=\"warning\">此操作不可撤销！</p>\r\n        <div class=\"modal-actions\">\r\n          <button @click=\"deleteFile\" class=\"confirm-delete\">确认删除</button>\r\n          <button @click=\"showDeleteConfirm = false\" class=\"cancel-delete\">取消</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FileList',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      files: [],\r\n      error: '',\r\n      userId: localStorage.getItem('userId'),\r\n      \r\n      // 新文件表单\r\n      newFile: {\r\n        filename: '',\r\n        content: '',\r\n        permission: 'read'\r\n      },\r\n      creating: false,\r\n      createError: '',\r\n      createSuccess: '',\r\n      \r\n      // 删除确认\r\n      showDeleteConfirm: false,\r\n      selectedFile: null,\r\n      deleting: false\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchFiles();\r\n  },\r\n  methods: {\r\n    async fetchFiles() {\r\n      this.loading = true;\r\n      this.error = '';\r\n      \r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        const response = await this.$axios.get(`/file/list/${userId}`);\r\n        this.files = response.data;\r\n      } catch (error) {\r\n        console.error('获取文件列表失败:', error);\r\n        if (error.response) {\r\n          this.error = error.response.data.message || '获取文件列表失败，服务器错误';\r\n        } else if (error.request) {\r\n          this.error = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          this.error = '获取文件列表失败，请稍后再试';\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async createFile() {\r\n      this.creating = true;\r\n      this.createError = '';\r\n      this.createSuccess = '';\r\n      \r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        await this.$axios.post('/file/create', {\r\n          userId: parseInt(userId),\r\n          filename: this.newFile.filename,\r\n          content: this.newFile.content || '',\r\n          permission: this.newFile.permission\r\n        });\r\n        \r\n        this.createSuccess = '文件创建成功！';\r\n        // 重置表单\r\n        this.newFile = {\r\n          filename: '',\r\n          content: '',\r\n          permission: 'read'\r\n        };\r\n        // 刷新文件列表\r\n        await this.fetchFiles();\r\n      } catch (error) {\r\n        console.error('创建文件失败:', error);\r\n        if (error.response) {\r\n          this.createError = error.response.data.message || '创建文件失败，服务器错误';\r\n        } else if (error.request) {\r\n          this.createError = '无法连接到服务器，请检查网络连接';\r\n        } else {\r\n          this.createError = '创建文件失败，请稍后再试';\r\n        }\r\n      } finally {\r\n        this.creating = false;\r\n      }\r\n    },\r\n    \r\n    viewFile(fileId) {\r\n      this.$router.push(`/file/${fileId}`);\r\n    },\r\n    \r\n    confirmDelete(file) {\r\n      this.selectedFile = file;\r\n      this.showDeleteConfirm = true;\r\n    },\r\n    \r\n    async deleteFile() {\r\n      if (!this.selectedFile || this.deleting) return;\r\n      \r\n      this.deleting = true;\r\n      try {\r\n        await this.$axios.delete(`/file/${this.selectedFile.id}`);\r\n        await this.fetchFiles();\r\n        this.showDeleteConfirm = false;\r\n        this.selectedFile = null;\r\n      } catch (error) {\r\n        console.error('删除文件失败:', error);\r\n        if (error.response) {\r\n          alert(error.response.data.message || '删除文件失败，服务器错误');\r\n        } else {\r\n          alert('删除文件失败，请稍后再试');\r\n        }\r\n      } finally {\r\n        this.deleting = false;\r\n      }\r\n    },\r\n    \r\n    formatFileSize(file) {\r\n      const size = file.fileSize || 0;\r\n      if (size < 1024) {\r\n        return `${size} B`;\r\n      } else if (size < 1024 * 1024) {\r\n        return `${(size / 1024).toFixed(2)} KB`;\r\n      } else {\r\n        return `${(size / (1024 * 1024)).toFixed(2)} MB`;\r\n      }\r\n    },\r\n    \r\n    formatDate(timestamp) {\r\n      if (!timestamp) return '未知';\r\n      try {\r\n        const date = new Date(timestamp);\r\n        return date.toLocaleString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          second: '2-digit'\r\n        });\r\n      } catch (e) {\r\n        console.error('日期格式化错误:', e);\r\n        return '日期格式错误';\r\n      }\r\n    },\r\n    \r\n    translatePermission(permission) {\r\n      const permissionMap = {\r\n        'read': '只读',\r\n        'write': '只写',\r\n        'readwrite': '读写'\r\n      };\r\n      return permissionMap[permission] || permission;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.file-list h2 {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.file-table-card {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.loading, .empty-list {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  color: #7f8c8d;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.view-btn {\r\n  background-color: #3498db;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.delete-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.delete-modal-content {\r\n  width: 90%;\r\n  max-width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.delete-modal-content h3 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.warning {\r\n  color: #e74c3c;\r\n  margin: 1rem 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.confirm-delete {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.cancel-delete {\r\n  background-color: #7f8c8d;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}